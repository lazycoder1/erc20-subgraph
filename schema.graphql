type Token @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
  balances: [TokenBalance!]! @derivedFrom(field: "token")
  approvals: [TokenApproval!]! @derivedFrom(field: "token")
}

type Transfer @entity {
  id: ID!
  _to: String!
  _from: String!
  _value: String!
  decimals: Int!
  _hash: String!
  symbol: String!
  name: String!

  blockNumber: BigInt!
  blockTimestamp: BigInt!

}

type Account @entity {
  id: ID!
  balances: [TokenBalance!]! @derivedFrom(field: "account")
  incomingApprovals: [TokenApproval!]! @derivedFrom(field: "spenderAccount")
  outgoingApprovals: [TokenApproval!]! @derivedFrom(field: "ownerAccount")
}

type TokenBalance @entity {
  id: ID!
  token: Token!
  account: Account!
  value: BigDecimal!
}

type TokenApproval @entity {
  id: ID!
  token: Token!
  ownerAccount: Account!
  spenderAccount: Account!
  value: BigDecimal!
}
